1.01
1/21/16 Started Project
1/21/16 Made header with struct of rock, room, and corridor, along with an enumeration for each of those three
1/21/16		Also made a generic struct that can be one of the three
1/22/16 Made the union in the header
1/22/16 Added destroy
1/22/16 Made a union tag with a parent struct
1/22/16 Also better defined constructor and deconstructors
1/22/16 Fixed bugs in DungeonObjects.c
1/22/16 Fixed deconstructors bugs related to pointers
1/22/16 Change the structs inside union and structs to pointer
1/22/16 Removed pointers to structs
1/22/16 Added pass by reference in dungeonObjects.c
1/22/16 Trying pointer implementation again
1/22/16 Added pointer return to constructors
1/22/16 Removed pointers from header
1/22/16 Change from arrows to dots
1/22/16 Removed mallocs and deconstructors
1/22/16 Practicing rand() implementation and use from lecture
1/22/16 Practicing using modulos to get a specific range of random numbers
1/22/16 Testing my random implementation
1/22/16 Testing for loop with pointer instead of counter int
1/22/16 A lot of testing and bug fixing looping by pointer
1/22/16 After several hours finally figured out looping by pointers
1/23/16 Started Makefile
1/23/16 Beginning dungeonRoomGenerator to make array of random rooms of random sizes
1/23/16 Converting time_t to int
1/23/16 Fixed small pointer to int bug
1/23/16 Adding printf for debugging
1/23/16 Changed how I'm using random for room generator
1/23/16 Fixed parameters in header file
1/23/16 Changed loop termination for looping through pointer of rooms (array)
1/23/16 Experimenting loop termination with an invalid extra room at the end of the array to determine size
1/23/16 Fully fixed for loop termination
1/24/16 Testing tagged union
1/24/16 Bug fix in tagged union
1/24/16 Testing generating blank dungeonObjects
1/24/16 Fixed global double pointer to tagged union
1/24/16 Forgot stdio.h in dungeonLevelGenerator.can
1/24/16 Testing room placement
1/24/16 Fixed room generating in borders
1/24/16 Added more debugging printf
1/24/16 Fixed while loop condition for room placement
1/24/16 Changed drawing to switch case
1/24/16 Added corridor case for switch case
1/24/16 Fixed room drawing
1/24/16 Added condition to prevent room overlap
1/24/16 Fixed boolean condition
1/24/16 Added 1 spacing to room placement
1/24/16 Enhanced overlap check
1/24/16 Fixed boolean flags
1/24/16 Fixed 1 spacing
1/24/16 Started sorting rooms in rooms array by closest to first room, then closest to second, etc...
1/24/16 Bug fixing room sorting
1/24/16 Added debug printf to room sorting
1/24/16 Checking sorting results
1/24/16 Changed distance from center of room rather than corner
1/24/16 Implementing Bresenham's line algorithm
1/24/16 Bug fix to itoa()
1/24/16 itoa not supported, changing to snprintf
1/24/16 More use of debugging with printf
1/24/16 Experimenting with line algorithm
1/24/16 Experimenting enhancing the line algorithm to avoid diagonals
1/24/16 Succesfully implemented line algorithm without diagonals
1/24/16 Experimenting with more rooms and larger rooms to determine stability
1/24/16 Done experimenting. Most stable parameters are 5 to 7 rooms of up to size 6x5
1/24/16 Moved dungeon generation from main function to it's own function
1/24/16 Bug fixing final implementation
1/24/16 dungeon generator function returns a 2D array representation of dungeon and uses it to draw
1/26/16 Finished Makefile, README, and the code itself
1/26/16 Finished CHANGELOG. Ready to package and deliver

1.02
1/28/16 Started dungeonIO.h; Started header for saving and loading.
1/28/16 Implementing argument inputs
1/28/16 Added ctype.h and fix debug printf
1/28/16 looping from second argument
1/28/16 fixing isstring
1/29/16 Made dungeonIO.c and typdef Flags enumeration and implement contains flags
1/29/16 added dungeonIO to makefile and starting to test it in main
1/29/16 Fixed Makefile
1/29/16 Added debugging printf
1/29/16 changed line of debug printf
1/29/16 Testing flag array
1/29/16 bug fix
1/29/16 forgot semi colon
1/29/16 Should fix the flag array bug
1/29/16 Testing argument conditions
1/29/16 removed switch case
1/29/16 Checks if their is a seed and load flag
1/29/16 fixed checking for seed and load flag together
1/29/16 Finished all argument states
1/29/16 Forgot to return on invalid argument
1/29/16 Added density of 0 to room and corridor and change permanent rock from INT_MAX to 255
1/29/16 No permanent rock within borders
1/29/16 Testing getenv
1/29/16 testing slashes in string in getenv
1/29/16 testing getenv with strcat
1/29/16 testing checking for folder existing or not
1/29/16 Fixed typo in getenv
1/29/16 testing mkdir
1/29/16 forgot to include header for mkdir
1/29/16 testing null return from getenv
1/29/16 fixing segfault
1/29/16 More getenv testing
1/29/16 mkdir and getenv in one line
1/29/16 final testing, should work now
1/29/16 Cleaned up the debug code
1/29/16 removed if else for mkdir
1/29/16 Testing ssh
1/29/16 final testing of ssh key
1/29/16 removed bad use of getenv
1/29/16 Started load method
1/29/16 testing access
1/29/16 added errno.h
1/29/16 Some error fixing in access testing
1/29/16 Testing access with non existing file
1/29/16 added access() to load
1/29/16 testing strcat in --load
1/29/16 playing with string for --load
1/29/16 more playing with strings for --load
1/29/16 warning fix for playing with strings in --load
1/29/16 testing strdup in --load
1/29/16 was using strstr instead of strcat, bug fixed
1/29/16 --load will now check for file existance
1/29/16 testing --load param
1/29/16 testing input order
1/29/16 bug fix --load input
1/29/16 Fixing isstring()
1/29/16 more fixing isstring()
1/29/16 debugging isstring()
1/29/16 Fixed isstring()
1/29/16 --load parameters should be working
1/29/16 testing load()
1/29/16 debbuging warnings in load()
1/29/16 fixing warning in load()
1/29/16 trying freads
1/29/16 Trying closing file
1/29/16 debugging load()
1/29/16 looking for the error
1/29/16 removing warnings
1/29/16 trying to catch error
1/29/16 forgot errno.h
1/29/16 missed parenthesis
1/29/16 hardcoding local txt file for fopen debugging
1/30/16 Final test of fopen for the night
1/30/16 trying to debug fopen
1/30/16 string bug fixed
1/30/16 access commented out to find bug
1/30/16 checking if I can do strcat outside of main function
1/30/16 Removed the strdup
1/30/16 debugging isstring
1/30/16 flagging load's parameter as load
1/30/16 Should be working now
1/30/16 edited a debugging printf
1/30/16 forgot to change file existance checker to dungeonFolder
1/30/16 Reading header and version marker test
1/30/16 testing catching wrong file format
1/30/16 forgot string.h
1/30/16 Fixing version marker check
1/30/16 Checking single null for version marker
1/30/16 comparing version marker to correct version marker
1/30/16 comparing version marker worked, removing unnecesary variables
1/30/16 testing %x
1/30/16 testing freads to uint64
1/30/16 forgot stdint.h
1/30/16 testing casting
1/30/16 fixing patter in printf
1/30/16 playing with referencing
1/30/16 Converting BetoH
1/30/16 Starting to read file size
1/30/16 Converting file size to uint64
1/30/16 FIxing %l to %u in printf
1/30/16 fixed %u to %lu
1/30/16 changed uint64 to uint32
1/30/16 changed %lx to %x
1/30/16 testing file size error
1/30/16 forgot to free sizeRaw
1/30/16 Testing wrong file size
1/30/16 Begin reading cells
1/30/16 made debugging printf on dungeon creation
1/30/16 fixing mallocing
1/30/16 changed second malloc if condition to y
1/30/16 removing some debugging printf and editing others
1/31/16 All 0 hardness defaults to corridors
1/31/16 Started implementing room reading
1/31/16 fixing cast
1/31/16 fixing char to uint8 cast
1/31/16 Now reading and making rooms
1/31/16 Drawing loaded dungeon
1/31/16 Fixed room drawing
1/31/16 correcting dungeon map name
1/31/16 Finished loading and remove most debug printf
1/31/16 Removing some freeing bugs
1/31/16 Another freeing fix
1/31/16 Making saving param
1/31/16 testing getenv after load in save
1/31/16 made path separate from file
1/31/16 save checks if the file was loaded
1/31/16 misplace loaded flag
1/31/16 doing strings with realloc
1/31/16 changed strdup to strcpy
1/31/16 going back to original
1/31/16 testing string manipulation
1/31/16 forgot \n
1/31/16 Testing input conditions
1/31/16 testing writing RLG327
1/31/16 Forgot to call save
1/31/16 Fixing return for load
1/31/16 load returns invalid dungeon on fail
1/31/16 fixing malloc
1/31/16 fixing mallocing fail load
1/31/16 Forgot ;
1/31/16 split load and draw into two lines
1/31/16 forgot to change fread to fwrite
1/31/16 testing writing file size
1/31/16 fixed return statement from NULL to 0
1/31/16 Testing saving
1/31/16 fixing room writing malloc bug
1/31/16 Finding bug
1/31/16 added debug printf
1/31/16 commenting out failing free
1/31/16 debugging corridor
1/31/16 change dungeon loop to row major
1/31/16 Removing debug printf
2/2/16 catches invalid -- switch and README updated
2/2/16 Testing a freeing memory of roomToWrite
2/2/16 Taking last code commit back
2/2/16 Testing accepting number only file for --load
2/2/16 Removing last commit of taking number only filename for load
2/2/16 Added more usage printf for invalid load and seed argument
2/2/16 Finished CHANGELOG. Ready to package and deliver

1.03
2/4/16 Update README.md
2/6/16 Including binheap files and updating makefile for them
2/7/16 Implemented a graph with vertex and edges for dungeon
2/7/16 Added position struct to dungeonObjects
2/7/16 move limits.h to header file in graph
2/7/16 Started character controller
2/7/16 Player Character done in CharacterController
2/7/16 Made GameStateManager
2/7/16 Moved Draw_Dungeon to GameStateManager
2/7/16 player placement selects seed by time if no seed inputed
2/7/16 Include GameStateManager in main
2/7/16 Fixed realloc in Graph.c and updated Makefile
2/7/16 Forgot to include stdlib.h
2/7/16 Created invalid structs for NULLS
2/7/16 Fixed declaring NULL structs
2/7/16 fixed extern declarations
2/7/16 passing seed by reference in Place_Player
2/7/16 forgot stdio.h in GameStateManager
2/7/16 Had an extra ;
2/7/16 Fixing making an int a pointer and dereference
2/7/16 Bug fixing last change
2/7/16 remove crazy in line value to int pointer
2/7/16 Fixed Makefile
2/7/16 Fixing memory leak in dungeonRoomGenerator
2/7/16 Changed corridor struct and it's constructors to fix memory leak
2/7/16 Forgot to change header for Place_Corridor
2/7/16 freeing malloced memory
2/7/16 Freeing malloced memory in CharacterController
2/7/16 Added destroy dungeon to close memory leaks
2/7/16 Freeing dungeon twice and debugging seed for character
2/7/16 Forgot stdio in charactercontroller
2/7/16 Correctly freeing double pointer and more seed debugging
2/7/16 forgot to dereference seed in characterdontroller
2/7/16 Bug fixing in Graph.c
2/7/16 Debugging Graph.c
2/7/16 Made NULL structs const
2/7/16 Made NULL_POS const
2/7/16 Remove const keyword and hardcoded NULL_VERTEX in NULL_EDGE
2/7/16 dereference in NULL_EDGE
2/7/16 Trying to fix pointer
2/7/16 Fixing same stuff
2/7/16 Removed pointer and remade NULL structs const
2/7/16 Fixing bugs in Graph
2/7/16 Updated Makefile to include Graph
2/7/16 Started Dijkstra's algorithm
2/7/16 Finished Dijkstra start debugging
2/7/16 Updated makefile for dijstra
2/7/16 Fixed autocorrect from Dijkstra.clean to .c
2/7/16 Debugging Dijkstra
2/8/16 Bug fixing dijsktra
2/8/16 More bug fixing Dijkstra
2/8/16 Testing graph generation
2/8/16 forgot to include graph.h
2/8/16 debugging graphing
2/8/16 Testing calling Dijkstra function
2/8/16 Re testing graphing
2/8/16 Commenting out unused variables
2/8/16 Looking or memory leak in dijstra
2/8/16 Fixing memory leak in Dijkstra
2/8/16 Forgot stdio.h in Dijkstra
2/8/16 Debuging memory leaks
2/8/16 Fixing bugs
2/8/16 Commenting debug printf out
2/8/16 Testing fixes
2/8/16 Bug fix
2/8/16 more debugging dijkstra
2/8/16 debugging printf
2/8/16 debugging comment
2/8/16 Testing index with printf
2/8/16 more printf testing
2/8/16 returning int max when out of bounds
2/8/16 remove heap deconstructor
2/8/16 validating graph
2/8/16 cahged some indexing, testing again
2/8/16 Ignores vertices that have been removed from heap
2/8/16 Forgot ;
2/8/16 passing all distances total to int array
2/14/16 testing int to char
2/14/16 testing the + '0' for int to char
2/14/16 changed distance array to uint8
2/14/16 implicit cast (char)
2/14/16 debugging printf
2/14/16 debugging distances_int from getcots
2/14/16 changed from uint8 to uint
2/14/16 fix to uint type
2/14/16 debugging with printf
2/14/16 debugging with printf in graph
2/14/16 forgot stdio
2/14/16 Looking at distances again
2/14/16 was getting source of edge not target, checking distances with this change
2/14/16 testing getting target vertex
2/14/16 Checking same as last commiut
2/14/16 checking if different vertex from edge target
2/14/16 debugging with printf
2/14/16 check for null vertex
2/14/16 checking distances
2/14/16 changing to unsing int for distance
2/14/16 changed INT_MAX to 428400 to avoid overflow
2/14/16 drawing distance duingeon
2/14/16 forgot a lot of ;
2/14/16 segfault in double char array
2/14/16 change from double pointer to double array
2/14/16 made double char array a global
2/14/16 changed global char double array to double pointer
2/14/16 change double pointer to single pointer
2/14/16 few warning fixes
2/14/16 testing for non tunneler map
2/14/16 debugging 0 distances
2/14/16 changed room and corridor weights from 0 to 1
2/14/16 changed weights back to 0 to debug, now filtering out neighboring rocks
2/14/16 Forgot to acces vertexData
2/14/16 change rooms and corridors to weight of 1
2/14/16 checking for [0][0]
2/14/16 looking where [0][0] gets 0 weight
2/14/16 Trying to fet where [0][0] gets set to 0 distance
2/14/16 debugging [0][0]=0
2/14/16 didn't correctly delete if statement
2/14/16 more debug printf
2/14/16 checking edge weight
2/14/16 more trying to find that 0
2/14/16 checking tunneler map
2/14/16 making edge to null on non tunneller rocks
2/14/16 commenting out debug printf and drawing both distance maps
2/14/16 More commenting out debug printf and added new lines between maps
2/14/16 changing ~ to white space and making borders ~
2/14/16 Changed Border on normal map from R to ~
2/14/16 hardcoding player pos to check solution map
2/14/16 bug fixing last commit
2/14/16 mixed my x and y for hardcoded player pos
2/14/16 drawing loaded distancef maps
2/14/16 debugging tunneler
2/14/16 remove last commit
2/14/16 made new variable for second distance map
2/14/16 setting hard limits on cell weight
2/14/16 messing with border stuff
2/14/16 forgot to do else
2/14/16 Remove last commit and making edge weight uint
2/14/16 shifted weights to 2, 3, 4
2/14/16 removing last commit
2/15/16 Using the professor's weights
2/15/16 +1 in Dijkstra for tunnelers
2/15/16 Removed the + 1
2/15/16 Check for +1, but doesn't add it
2/15/16 graph weights are back to normal
2/15/16 trying the + 1 in distance if
2/15/16 removed all of the professor's version of weights, back to what assignment asks for
2/15/16 player pos is no longer hard coded on load
2/15/16 Forgot to uncomment and comment a few things
2/15/16 if distance > Z, draw map normally in that cell
2/16/16 Finished README
2/16/16 freeing and destroying
2/16/16 calling destroy
2/16/16 made insert_vertex not a pointer and passing to heap by reference
2/16/16 forgot to remove the malloc of insert_vertex
2/16/16 moved Destroy_Dijstra to gamestatemanager
2/16/16 passing graph to destroy by reference
2/16/16 Broke something, trying to find it
2/16/16 trying to fix what I broke
2/16/16 commenting out destroy
2/16/16 moved graph to local space
2/16/16 made insert_vertex a pionter again
2/16/16 fixing how I'm calling pointer
2/16/16 fixing another call to a pointer variable
2/16/16 Revert "fixing another call to a pointer variable"
2/16/16 Revert "fixing how I'm calling pointer"
2/16/16 Revert "made insert_vertex a pionter again" 
2/16/16 Revert "moved graph to local space" 
2/16/16 Revert "commenting out destroy"
2/16/16 Revert "trying to fix what I broke" 
2/16/16 Revert "Broke something, trying to find it" 
2/16/16 Revert "passing graph to destroy by reference" 
2/16/16 Revert "moved Destroy_Dijstra to gamestatemanager" 
2/16/16 Revert "forgot to remove the malloc of insert_vertex" 
2/16/16 Revert "made insert_vertex not a pointer and passing to heap by reference"
2/16/16 Revert "calling destroy" 
2/16/16 Revert "freeing and destroying" 
2/16/16 freeing nodes, and all 3 dijstra member variables
2/16/16 removed free(nodes)
2/16/16 destroying dijstra twice
2/16/16 freeing inster_vertex
2/16/16 passing insert_vertex by reference instead of pointer
2/16/16 making inster_vertex a pointer again and freeing it after use
2/16/16 moved insert_vertex declaration out of for loop
2/16/16 not freeing insert_vertex
2/16/16 removing last few commits
2/16/16 deleting binheap after using it
2/16/16 changed inster_vertex to array
2/16/16 small change to referencing vertex array
2/16/16 made graph a global in GameStateManager
2/16/16 destroyiung graph
2/16/16 pasing graph by reference
2/16/16 trying to free adjacent edges
2/16/16 moved adjacent edges to global and free it on destroy all
2/16/16 removed freeing adjacent edges and freeing distance maps
2/16/16 moved adjacent edge back to local
2/16/16 freeing adjacent edges
2/16/16 breaking up if to find invalid read
2/16/16 splitting if more to find invalid read
2/16/16 put if back in one line and commented out first destroy all
2/16/16 No memory leaks, but invalid read for unkown reasons
2/16/16 testing moving adjacent edges out of loop and mallocing
2/16/16 handling free in graph
2/16/16 commented out free
2/16/16 making adjacent edge an array and pass by reference
2/16/16 removing last commit
2/16/16 forgot to revert one more thing
2/16/16 Finished CHANGELOG. Ready to package and deliver

1.04
2/17/16 Started homework
2/21/16 added character types enum and character tagged union as a parent struct for all characters
2/21/16 added constructors
2/21/16 fixing errors to contstructors
2/21/16 changed player_t handling to it's parent
2/21/16 forgot to declared num_character as int
2/21/16 changed global pc to character_t
2/21/16 resolving global conflicts
2/21/16 added functions for moving player
2/21/16 fixes to bugs from last commit
2/21/16 Made turns function
2/21/16 Fixing bugs from last commit
2/21/16 setting player character from character list
2/21/16 applying timer
2/21/16 Making sure distance drawing still works
2/21/16 back to drawing turns
2/21/16 started monsters, testing setting powers
2/21/16 forgot stdio.h
2/21/16 fixing bugs from last change
2/21/16 more bug fixing
2/21/16 forgot ;
2/21/16 turned off turns for debugging monster powers
2/21/16 debugging monster powers
2/21/16 more monster powers
2/21/16 more debugging monsters
2/21/16 fixed seg fault
2/21/16 trying to find segfault
2/21/16 trying to find that segfault
2/21/16 trying to fix segfault
2/21/16 debugging
2/21/16 Found it
2/21/16 back to testing setting powers
2/21/16 commenting out reseeding
2/21/16 moved seeding to gamestate
2/21/16 testing setting powers
2/21/16 wrapping in parenthesis
2/21/16 fixed power choosing
2/21/16 making monsters and printfing them
2/21/16 fixed return types for monster creation
2/21/16 fixing some more minor bugs
2/22/16 debugging monsters that are drawn on map
2/22/16 No overlapping monster on start
2/22/16 prints number of characters placed
2/22/16 added initial telepathy, now printing hex value for monster
2/22/16 checking telepaths are assigned correctly
2/22/16 testing updating telepaths when player moves
2/22/16 fixing small bug
2/22/16 checking line of sight
2/22/16 bug fix last commit
2/22/16 more small bug fixes
2/22/16 forgot to comment out turn
2/22/16 started skeleton for monster movements
2/22/16 testing moving stupid monsters
2/22/16 small bug fix
2/22/16 wrong monster type
2/22/16 testing stupid tunnelers
2/22/16 testing erratic
2/22/16 small bug fix
2/23/16 testing get path
2/23/16 forgot a ;
2/23/16 small bug fix
2/23/16 change get path back
2/23/16 testing get path again
2/23/16 small bug fix
2/23/16 bug fix in while loop
2/23/16 testing loop
2/23/16 testing more loops
2/23/16 added a condition
2/23/16 small fix
2/23/16 testing smart non tunneler telepath
2/23/16 bug fix
2/23/16 checking map
2/23/16 bug fix
2/23/16 debugging
2/23/16 bug found
2/23/16 testing non tunneling smart
2/23/16 debugging
2/23/16 changing linee of sight calculation
2/23/16 debugging
2/23/16 all movements
2/23/16 fix some things
2/23/16 checking the monsters
2/23/16 fixed stuff
2/23/16 have all monsters
2/23/16 don't move to border
2/23/16 added alive boolean
2/23/16 forgot to set the boolean
2/23/16 draw player
2/23/16 testing the stuff I made
2/23/16 small bug fix in tunneling
2/23/16 killing
2/23/16 small bug fix
2/23/16 removing warnings
2/23/16 accidentally removed else if in drawing
2/23/16 all monster types
2/23/16 was referencing the wrong thing
2/23/16 typo fix
2/23/16 stops turning when player dies
2/23/16 added win case
2/23/16 debugging
2/23/16 forgot to use tunneler map
2/23/16 commenting out debugg printf
2/23/16 debug comment
2/23/16 fixed bugg
2/23/16 cleaning code
2/23/16 debugging with strongest monster
2/23/16 everything works just need README and CHANGELOG
2/23/16 Finished README
2/23/16 Finished CHANGELOG. Ready to package and deliver

1.05
3/4/16 Started homework
3/5/16 freeing memory
3/5/16 more freeing and commented out slee
3/5/16 removing double free
3/5/16 destroy all
3/5/16 free distances
3/5/16 freeing distance
3/5/16 removing double free
3/5/16 freeing distance and commenting out predecessor
3/5/16 forgot to comment out one predecessor
3/5/16 commented out a debug printf and freeing visited
3/5/16 freeing graph
3/5/16 destroy characters
3/5/16 locating invalid read
3/5/16 testing invalid read
3/5/16 Is the next vertex null
3/5/16 invalid read found
3/5/16 making char array of what to draw
3/5/16 changed single string to char
3/5/16 fixing errors
3/5/16 testing drawing array
3/5/16 forgot new line
3/5/16 printf %x
3/5/16 forgot {}
3/5/16 converting hex to char
3/5/16 testing adding \n to renderer array
3/5/16 printing rendering array in another loop
3/5/16 error fix
3/5/16 started curses
3/5/16 moved init end endwin
3/5/16 printing debug line and map in 1 to 21
3/5/16 testing printing debug line
3/5/16 testing printing debug line with curses
3/5/16 draw final dungeon
3/5/16 fixing errors
3/6/16 testing clear
3/6/16 printing input
3/6/16 testing commented out drawing
3/6/16 testing getch
3/6/16 raw, noecho, keypad
3/6/16 moving moving character
3/6/16 clear when redrawing
3/6/16 moving refresh out of loop
3/6/16 testing getting key up
3/6/16 Defining keys
3/6/16 moved define_keys to input_handler, made command enum
3/6/16 small error fix
3/6/16 set keypad to true and moving define_key
3/6/16 define keys helper
3/6/16 UP and DOWN caugh
3/6/16 all directions programmed
3/6/16 moving player based on controls
3/6/16 error fix
3/6/16 added rest key
3/6/16 doing monster list
3/6/16 returning from menu
3/6/16 menu handling
3/6/16 monster distance to playe
3/6/16 end game immediately after death
3/6/16 end immediatle after win
3/6/16 dont draw dead monster info
3/6/16 scrolling
3/6/16 scroll fix
3/6/16 limit menu draw
3/6/16 fixing limiting draw and wait for another input on invalid key
3/6/16 don't move until move key
3/6/16 fixing not moving on wrong key
3/7/16 stair placement start
3/7/16 forgot ;
3/7/16 trying to draw stairs
3/7/16 debugging stairs
3/7/16 stairs fixed
3/7/16 go downstairs
3/7/16 moving curses before dungeon generation
3/7/16 testing making new dungeon
3/7/16 removing warnings
3/7/16 trying more stuff
3/7/16 printf testing
3/7/16 debugging
3/7/16 trying things
3/7/16 setting upstairs
3/7/16 testinng second stairs
3/7/16 making random new level
3/7/16 go downstairs
3/7/16 testing going up
3/7/16 debbuging
3/7/16 debuging with printf
3/7/16 Revert "debugging"
3/7/16 fix monster kill
3/7/16 going up error fix
3/7/16 testing monster killing
3/7/16 monster killing fix
3/7/16 move upstairs if same as downstairs
3/7/16 placing stairs where player spawns
3/7/16 error fix
3/7/16 player only spawns in rooms
3/7/16 debugging stair placement
3/7/16 Only missing S and colors
3/7/16 removing some debug printf
3/7/16 can't move through rock
3/7/16 doing colors
3/7/16 testing how many colors you can do
3/7/16 Coloring
3/7/16 fixing stuff
3/7/16 not adding a nunch of space
3/7/16 Reverts
3/7/16 changing how to draw final
3/7/16 using mvprintw
3/7/16 white win
3/7/16 filling out blank space
3/7/16 changing messages
3/7/16 stairs and player can now spawn in corridors
3/7/16 uncommented the wrong code
3/7/16 draw stairs on corridors
3/7/16 colors on monster list
3/7/16 work on load
3/7/16 exit key
3/7/16 fixing segfault
3/7/16 can't give it a level number
3/7/16 last debugging
3/7/16 don't move things on stairs or exit
3/7/16 README and CHANGELOG finished, ready to submit

1.06
3/19/16 Started homework
3/19/16 Fixing invalid read
3/19/16 Testing STuff
3/20/16 Change CharacterController to .cpp
3/20/16 Forgot to change reference of file to .cpp
3/20/16 Forgot to change reference of file to .cpp
3/20/16 Forgot to change reference of file to .cpp
3/20/16 changed struct bool to boolean to avoid conflict
3/20/16 updating dynamic memory calls
3/20/16 using c++ string literals
3/20/16 updating makefile
3/20/16 move c headers inside extern c block
3/21/16 turned player into a class
3/21/16 fixing errors
3/21/16 converting class to c
3/21/16 made monsterClass
3/21/16 making things private
3/21/16 made monster memory a pointer
3/21/16 removed memory pointer
3/21/16 forgot to remove a pointer function
3/21/16 forgot to make constructor a pointer
3/21/16 fixing errors
3/21/16 fixing adding monsters to binheap
3/21/16 moved classes to after extern c
3/21/16 making characterClass
3/21/16 fixing errors
3/22/16 changed all of CharacterController
3/22/16 fixing errors
3/22/16 commented out depricated functions
3/22/16 fixing malloc
3/22/16 fixing realloc
3/22/16 fixing character_list references
3/22/16 fixing character map
3/22/16 updated move_player
3/22/16 fixing error x 10
3/22/16 updating compare_character
3/22/16 fixing get_character_by_id(0)
3/22/16 fixed casting
3/22/16 fixed player_to_move->pos
3/22/16 errors in CharacterController.cpp fixed
3/22/16 testing stuff
3/22/16 fixing errors
3/22/16 making Set_Player return a pointer
3/22/16 Fixed get_character_by_id(0).pos
3/22/16 fixing character_list[0].pos
3/22/16 fixing player_to_set.pos
3/22/16 fixing errors
3/22/16 started fog of war
3/22/16 not remebering monster l;ocation
3/22/16 fixing errors
3/22/16 coloring
3/22/16 Finished
3/22/16 README and CHANGELOG finished, ready to submit 

1.07
3/27/16 Started HW
3/27/16 Started dice class
3/27/16 Finished dice class
3/28/16 Started monster parse
3/28/16 Testing reading file
3/28/16 Reading header
3/28/16 Reading lines
3/28/16 reading name
3/28/16 storing values in monster object
3/28/16 creating vector of monster object
3/29/16 fixing errors
3/29/16 testing
3/29/16 reading name
3/29/16 reading description
3/29/16 testing
3/29/16 fixing errors
3/29/16 reading colors suing ncurses enums
3/29/16 tetsing
3/29/16 reading speed
3/29/16 reading hp
3/29/16 reading damage
3/29/16 testing dice emthods
3/29/16 reading abilities using bit field
3/29/16 testing
3/29/16 fixxing errors
3/29/16 printing everything in right format
3/29/16 Finished
3/29/16 README and CHANGELOG finished, ready to submit 

1.08
4/3/16 Started HW
4/3/16 Updated monster classes
4/3/16 Testing
4/3/16 fixing errors
4/4/16 Refactoring monster generating
4/4/16 refactoring monster movements
4/4/16 refactoring everything monster
4/4/16 fixing errors
4/4/16 Revert everything related to refactoring
4/4/16 extending monsterClass wrappers
4/4/16 generating monster from monsterList
4/4/16 rendering monsters
4/4/16 fixing errors
4/4/16 testing
4/5/16 making object parser
4/5/16 fixing errors
4/5/16 testing
4/5/16 making item factory
4/5/16 fixing error
4/5/16 testing
4/5/16 placing items
4/5/16 testing
4/5/16 rendering
4/5/16 fixing rendering bugs
4/5/16 testing
4/5/16 Done
4/5/16 README and CHANGELOG finished, ready to submit 